-- =============================================
-- RLS POLICIES F√ñR active_orders_working VIEW
-- S√§krar underliggande tabeller: orders och profiles
-- =============================================

-- VIKTIGT: active_orders_working √§r en VIEW som bygger p√• orders + profiles
-- VIEWs √§rver RLS fr√•n underliggande tabeller, s√• vi beh√∂ver s√§kra dessa

-- =============================================
-- 1Ô∏è‚É£ KONTROLLERA BEFINTLIGA POLICIES
-- =============================================

-- Lista alla befintliga policies f√∂r orders
SELECT schemaname, tablename, policyname, cmd, roles 
FROM pg_policies 
WHERE tablename = 'orders'
ORDER BY cmd, policyname;

-- =============================================
-- 2Ô∏è‚É£ AKTIVERA RLS P√Ö TABELLERNA (om inte redan gjort)
-- =============================================

-- Aktivera RLS p√• orders-tabellen
ALTER TABLE orders ENABLE ROW LEVEL SECURITY;

-- Aktivera RLS p√• profiles-tabellen  
ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;

-- =============================================
-- 3Ô∏è‚É£ SELECT-POLICY F√ñR ORDERS (SAKNAS!)
-- =============================================

-- Ta bort eventuell befintlig SELECT-policy
DROP POLICY IF EXISTS "Allow users to view their orders and admins to view all" ON orders;

-- Skapa ny SELECT-policy f√∂r orders
CREATE POLICY "Allow users to view their orders and admins to view all" ON orders
FOR SELECT 
TO public
USING (
  -- Admin-anv√§ndare kan se alla orders
  EXISTS (
    SELECT 1 FROM profiles 
    WHERE id = auth.uid() 
    AND role = 'admin'
  ) OR
  -- Anv√§ndare kan se sina egna orders
  (user_id != '00000000-0000-0000-0000-000000000000' AND auth.uid() = user_id) OR
  -- Anonyma orders kan ses av alla (f√∂r g√§st-best√§llningar)
  (user_id = '00000000-0000-0000-0000-000000000000') OR
  -- Location-admins kan se orders f√∂r sina locations
  EXISTS (
    SELECT 1 FROM profiles p
    JOIN admin_locations al ON p.id = al.admin_id
    WHERE p.id = auth.uid() 
    AND p.role = 'admin'
    AND al.location = orders.location
  )
);

-- =============================================
-- 4Ô∏è‚É£ SELECT-POLICY F√ñR PROFILES
-- =============================================

-- Ta bort eventuell befintlig SELECT-policy f√∂r profiles
DROP POLICY IF EXISTS "Allow users to view profiles" ON profiles;

-- Skapa SELECT-policy f√∂r profiles (beh√∂vs f√∂r JOIN i VIEW)
CREATE POLICY "Allow users to view profiles" ON profiles
FOR SELECT 
TO public
USING (
  -- Admin-anv√§ndare kan se alla profiler
  EXISTS (
    SELECT 1 FROM profiles p2
    WHERE p2.id = auth.uid() 
    AND p2.role = 'admin'
  ) OR
  -- Anv√§ndare kan se sin egen profil
  (id = auth.uid()) OR
  -- Alla kan se grundl√§ggande info f√∂r anonyma anv√§ndare
  (id = '00000000-0000-0000-0000-000000000000')
);

-- =============================================
-- 5Ô∏è‚É£ KONTROLLERA ATT active_orders_working FUNGERAR
-- =============================================

-- Testa VIEW:en (detta kommer att respektera RLS automatiskt)
-- SELECT * FROM active_orders_working LIMIT 5;

-- =============================================
-- 6Ô∏è‚É£ EXTRA S√ÑKERHET: ANDRA RELATERADE TABELLER
-- =============================================

-- Om du har order_items-tabell, s√§kra den ocks√•
-- ALTER TABLE order_items ENABLE ROW LEVEL SECURITY;

-- DROP POLICY IF EXISTS "Allow order items access" ON order_items;
-- CREATE POLICY "Allow order items access" ON order_items
-- FOR ALL 
-- TO public
-- USING (
--   EXISTS (
--     SELECT 1 FROM orders o
--     WHERE o.id = order_items.order_id
--     AND (
--       -- Admin kan se alla
--       EXISTS (SELECT 1 FROM profiles WHERE id = auth.uid() AND role = 'admin') OR
--       -- Anv√§ndare kan se sina egna orders
--       (o.user_id = auth.uid()) OR
--       -- Anonyma orders
--       (o.user_id = '00000000-0000-0000-0000-000000000000')
--     )
--   )
-- );

-- =============================================
-- 7Ô∏è‚É£ VERIFIERA ALLA POLICIES
-- =============================================

-- Lista alla policies f√∂r orders och profiles
SELECT 
  schemaname, 
  tablename, 
  policyname, 
  cmd, 
  roles,
  qual as using_expression,
  with_check as with_check_expression
FROM pg_policies 
WHERE tablename IN ('orders', 'profiles')
ORDER BY tablename, cmd, policyname;

-- =============================================
-- 8Ô∏è‚É£ TEST-QUERIES F√ñR VERIFIERING
-- =============================================

-- Dessa queries kan anv√§ndas f√∂r att testa s√§kerheten:

-- Som admin (ska se alla orders):
-- SET ROLE admin_user; -- Byt till admin
-- SELECT COUNT(*) FROM active_orders_working;

-- Som vanlig anv√§ndare (ska bara se sina egna):
-- SET ROLE regular_user; -- Byt till vanlig anv√§ndare  
-- SELECT COUNT(*) FROM active_orders_working;

-- Som anonym (ska bara se anonyma orders):
-- SET ROLE anon; -- Byt till anonym
-- SELECT COUNT(*) FROM active_orders_working;

-- =============================================
-- 9Ô∏è‚É£ S√ÑKERHETSNOTERINGAR
-- =============================================

/*
VIKTIGA S√ÑKERHETSASPEKTER:

1. ‚úÖ VIEW:en active_orders_working √§rver automatiskt RLS fr√•n orders + profiles
2. ‚úÖ Admins kan se alla orders (f√∂r admin-panel)
3. ‚úÖ Anv√§ndare kan bara se sina egna orders
4. ‚úÖ Anonyma orders √§r synliga (f√∂r g√§st-best√§llningar)
5. ‚úÖ Location-admins kan se orders f√∂r sina locations
6. ‚úÖ Inga konflikter med befintliga policies (vi ers√§tter dem s√§kert)

POTENTIELLA RISKER:
- ‚ö†Ô∏è Om anonyma orders inneh√•ller k√§nslig data, √∂verv√§g att begr√§nsa √•tkomsten
- ‚ö†Ô∏è Location-admin funktionalitet kr√§ver admin_locations tabell
- ‚ö†Ô∏è Se till att alla API-endpoints anv√§nder RLS (inte service role)

REKOMMENDATIONER:
- üîí Testa alltid med olika anv√§ndarroller
- üîí Anv√§nd NEVER service role i frontend
- üîí Logga s√§kerhetsrelaterade queries
*/ 